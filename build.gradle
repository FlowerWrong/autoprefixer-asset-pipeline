apply plugin: 'groovy'
apply plugin: 'maven-publish'
apply plugin: 'maven'
apply plugin: 'com.jfrog.bintray'

group = 'com.uberall.plugins'
version = '1.0.0'
ext.isReleaseVersion = !version.endsWith("SNAPSHOT")

def bintrayUser, bintrayKey

if(!project.hasProperty('bintrayUser')) {
    bintrayUser = 'test'
}
if(!project.hasProperty('bintrayKey')) {
    bintrayKey = 'empty'
}

buildscript {
    repositories {
        mavenLocal()
        jcenter()
    }
    dependencies {
        classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:0.5"
    }
}


repositories {
	mavenLocal()
    jcenter()
    mavenCentral()
}

configurations {
    provided
}
 
sourceSets {
    main {
        compileClasspath += configurations.provided
    }
}

dependencies {
    provided 'org.codehaus.groovy:groovy-all:2.0.7'
	compile "com.bertramlabs.plugins:asset-pipeline-core:2.0.12"
    compile 'org.mozilla:rhino:1.7R4'
    compile 'log4j:log4j:1.2.17'
	compile "com.github.sommeri:less4j:1.8.4"
    compile "com.github.sommeri:less4j-javascript:0.0.1"

    testCompile "org.spockframework:spock-core:0.7-groovy-2.0"
}

publishing {
    publications {
        maven(MavenPublication) {
            artifactId 'autoprefixer-asset-pipeline'
            pom.withXml {
                asNode().children().last() + {
                    resolveStrategy = Closure.DELEGATE_FIRST
                    name 'autoprefixer-asset-pipeline'
                    description 'Provides CSS autprefixing support for the Asset-Pipeline library.'
                    groupId group
                    artifactId artifact
                    version versino
                    url 'https://github.com/uberall/autoprefixer-asset-pipeline'
                    scm {
                        url 'https://github.com/uberall/autoprefixer-asset-pipeline'
                        connection 'scm:https://uberall@github.com/uberall/autoprefixer-asset-pipeline.git'
                        developerConnection 'scm:git://github.com/uberall/autoprefixer-asset-pipeline.git'
                    }
                    licenses {
                        license {
                            name 'The Apache Software License, Version 2.0'
                            url 'http://www.apache.org/license/LICENSE-2.0.txt'
                            distribution 'repo'
                        }
                    }
                    developers {
                        developer {
                            id 'peh'
                            name 'Philipp Eschenbach'
                            email 'philipp@uberall.com'
                        }
                    }
                }
            }
            from components.java
            artifact sourcesJar
            artifact javadocJar
        }
    }
    repositories {
        maven {
            // change to point to your repo, e.g. http://my.org/repo
            url "https://github.com/uberall/uberall-plugins/raw/mvn-repo/"
        }
    }
}

bintray {
    user = bintrayUser
    key = bintrayKey
    publications = ['maven']
    // pkg {
    //     repo = 'asset-pipeline'
    //     userOrg = 'uberall'
    //     name = 'autoprefixer-asset-pipeline'
    //     licenses = ['Apache-2.0']
    // }
}


task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from 'build/docs/javadoc'
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task(console, dependsOn: 'classes', type: JavaExec) {
  main = 'groovy.ui.Console'
  classpath = sourceSets.main.runtimeClasspath
}

test {
    testLogging {
        exceptionFormat = 'full'
        showStandardStreams = true
    }
}


bintrayUpload.dependsOn build, sourcesJar, javadocJar
